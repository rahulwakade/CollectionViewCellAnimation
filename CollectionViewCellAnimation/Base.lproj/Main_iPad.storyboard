<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<document type="com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB" version="3.0" toolsVersion="5056" systemVersion="13C1021" targetRuntime="iOS.CocoaTouch.iPad" propertyAccessControl="none" useAutolayout="YES" initialViewController="SZw-Ar-w6L">
    <dependencies>
        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="3733"/>
    </dependencies>
    <scenes>
        <!--View Controller-->
        <scene sceneID="NFN-Kr-wEz">
            <objects>
                <collectionViewController autoresizesArchivedViewToFullSize="NO" id="SZw-Ar-w6L" customClass="ViewController" sceneMemberID="viewController">
                    <collectionView key="view" opaque="NO" clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" minimumZoomScale="0.0" maximumZoomScale="0.0" dataMode="prototypes" id="GWf-IG-02c">
                        <rect key="frame" x="0.0" y="0.0" width="768" height="1024"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <collectionViewFlowLayout key="collectionViewLayout" minimumLineSpacing="10" minimumInteritemSpacing="10" id="Hyy-cN-8bM">
                            <size key="itemSize" width="121" height="87"/>
                            <size key="headerReferenceSize" width="0.0" height="0.0"/>
                            <size key="footerReferenceSize" width="0.0" height="0.0"/>
                            <inset key="sectionInset" minX="0.0" minY="0.0" maxX="0.0" maxY="0.0"/>
                        </collectionViewFlowLayout>
                        <cells>
                            <collectionViewCell opaque="NO" clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="center" reuseIdentifier="Cell" id="9ns-5h-yNt">
                                <rect key="frame" x="0.0" y="0.0" width="121" height="87"/>
                                <autoresizingMask key="autoresizingMask"/>
                                <view key="contentView" opaque="NO" clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="center">
                                    <rect key="frame" x="0.0" y="0.0" width="121" height="87"/>
                                    <autoresizingMask key="autoresizingMask"/>
                                    <subviews>
                                        <label opaque="NO" clipsSubviews="YES" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" lineBreakMode="tailTruncation" numberOfLines="0" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" preferredMaxLayoutWidth="101" translatesAutoresizingMaskIntoConstraints="NO" id="BLG-eo-w7j">
                                            <rect key="frame" x="10" y="10" width="101" height="67"/>
                                            <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                            <mutableString key="text">The UICollectionView class manages an ordered collection of data items and presents them using customizable layouts. Collection views provide the same general function as table views except that a collection view is able to support more than just single-column layouts. Collection views support customizable layouts that can be used to implement multi-column grids, tiled layouts, circular layouts, and many more. You can even change the layout of a collection view dynamically if you want.

When adding a collection view to your user interface, your appâ€™s main job is to manage the data associated with that collection view. The collection view gets its data from the data source object, which is an object that conforms to the UICollectionViewDataSource protocol and is provided by your app. Data in the collection view is organized into individual items, which can then be grouped into sections for presentation. An item is the smallest unit of data you want to present. For example, in a photos app, an item might be a single image. The collection view presents items onscreen using a cell, which is an instance of the UICollectionViewCell class that your data source configures and provides.

</mutableString>
                                            <fontDescription key="fontDescription" type="system" pointSize="21"/>
                                            <color key="textColor" cocoaTouchSystemColor="darkTextColor"/>
                                            <nil key="highlightedColor"/>
                                        </label>
                                    </subviews>
                                    <color key="backgroundColor" white="0.0" alpha="0.0" colorSpace="calibratedWhite"/>
                                </view>
                                <color key="backgroundColor" white="1" alpha="1" colorSpace="calibratedWhite"/>
                                <constraints>
                                    <constraint firstItem="BLG-eo-w7j" firstAttribute="top" secondItem="9ns-5h-yNt" secondAttribute="top" constant="10" id="8LM-lN-EDc"/>
                                    <constraint firstAttribute="bottom" secondItem="BLG-eo-w7j" secondAttribute="bottom" constant="10" id="8Lu-x0-zPf"/>
                                    <constraint firstAttribute="trailing" secondItem="BLG-eo-w7j" secondAttribute="trailing" constant="10" id="ROh-kC-8RI"/>
                                    <constraint firstItem="BLG-eo-w7j" firstAttribute="leading" secondItem="9ns-5h-yNt" secondAttribute="leading" constant="10" id="moX-Qe-kwp"/>
                                </constraints>
                            </collectionViewCell>
                        </cells>
                        <connections>
                            <outlet property="dataSource" destination="SZw-Ar-w6L" id="ns4-AC-Yjn"/>
                            <outlet property="delegate" destination="SZw-Ar-w6L" id="0uQ-Sd-lxz"/>
                        </connections>
                    </collectionView>
                    <extendedEdge key="edgesForExtendedLayout"/>
                </collectionViewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="Ids-P0-48V" userLabel="First Responder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="334" y="159"/>
        </scene>
    </scenes>
    <simulatedMetricsContainer key="defaultSimulatedMetrics">
        <simulatedStatusBarMetrics key="statusBar"/>
        <simulatedOrientationMetrics key="orientation"/>
        <simulatedScreenMetrics key="destination"/>
    </simulatedMetricsContainer>
</document>
